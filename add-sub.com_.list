EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
add-sub.com_ -- emu8086 assembler version: 4.08  
 
[ 1.7.2024  --  8.46.02 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       name "add-sub"
[   2]        :                                       
[   3]        :                                       org 100h
[   4]        :                                       
[   5]    0100: B0 05                                 mov al, 5       ; bin=00000101b
[   6]    0102: B3 0A                                 mov bl, 10      ; hex=0ah or bin=00001010b
[   7]        :                                       
[   8]        :                                       ; 5 + 10 = 15 (decimal) or hex=0fh or bin=00001111b
[   9]    0104: 02 D8                                 add bl, al
[  10]        :                                       
[  11]        :                                       ; 15 - 1 = 14 (decimal) or hex=0eh or bin=00001110b
[  12]    0106: 80 EB 01                              sub bl, 1
[  13]        :                                       
[  14]        :                                       ; print result in binary:
[  15]    0109: B9 08 00                              mov cx, 8
[  16]    010C: B4 02                                 print: mov ah, 2   ; print function.
[  17]    010E: B2 30                                 mov dl, '0'
[  18]    0110: F6 C3 80                              test bl, 10000000b  ; test first bit.
[  19]    0113: 74 02                                 jz zero
[  20]    0115: B2 31                                 mov dl, '1'
[  21]    0117: CD 21                                 zero:  int 21h
[  22]    0119: D0 E3                                 shl bl, 1
[  23]    011B: E2 EF                                 loop print
[  24]        :                                       
[  25]        :                                       ; print binary suffix:
[  26]    011D: B2 62                                 mov dl, 'b'
[  27]    011F: CD 21                                 int 21h
[  28]        :                                       
[  29]        :                                       ; wait for any key press:
[  30]    0121: B4 00                                 mov ah, 0
[  31]    0123: CD 16                                 int 16h
[  32]        :                                       
[  33]    0125: C3                                    ret
[  34]        :                                       
[  35]        :                                       
[  36]        :                                       
[  37]        :                                       
 
===================================================================================================
 




===================================================================================================
